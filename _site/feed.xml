<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="en" /><updated>2020-07-24T13:03:32+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Note</title><subtitle>sihyeon</subtitle><author><name>Sihyeon</name><email>aristohyun97@gmail.com</email></author><entry><title type="html">계산 복잡도 이론</title><link href="http://localhost:4000/blog/2020/07/23/P_NP/" rel="alternate" type="text/html" title="계산 복잡도 이론 " /><published>2020-07-23T00:00:00+09:00</published><updated>2020-07-23T00:00:00+09:00</updated><id>http://localhost:4000/blog/2020/07/23/P_NP</id><content type="html" xml:base="http://localhost:4000/blog/2020/07/23/P_NP/">&lt;style&gt;
    .margin {
      font-size:12px;
      margin-left:12px;
    }
    .nomargin{
      font-size:12px;
      margin-left:0;
    }
    .space{
      margin:-10px 0;
    }
  &lt;/style&gt;

&lt;blockquote&gt;
  &lt;p&gt;컴퓨터 과학에서 계산 이론의 분야로, 계산 문제를 푸는 알고리즘을 복잡도에 따라 분류하여 문제의 모임을 구성하는 방법을 연구한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul class=&quot;toc&quot; id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#heading-선형-시간-알고리즘&quot; id=&quot;markdown-toc-heading-선형-시간-알고리즘&quot;&gt;선형 시간 알고리즘&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#heading-다항-시간-알고리즘&quot; id=&quot;markdown-toc-heading-다항-시간-알고리즘&quot;&gt;다항 시간 알고리즘&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#heading-p-np란&quot; id=&quot;markdown-toc-heading-p-np란&quot;&gt;P, NP란?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;heading-선형-시간-알고리즘&quot;&gt;선형 시간 알고리즘&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;계산 복잡도 이론에서, 입력의 길이 n에 대하여 어떤 알고리즘의 실행시간이 선형(O(n))이 되는 것을 뜻한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;heading-다항-시간-알고리즘&quot;&gt;다항 시간 알고리즘&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;어떠한 문제를 계산하는 데에 걸리는 시간 m(n)이 문제의 크기 n의 다항식 함수보다 크지 않은 것을 가리킨다.  &lt;br /&gt;
m(n) = O(n^k)이 된다.(k는 문제의 크기)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;heading-p-np란&quot;&gt;P, NP란?&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;P : Polynomial time, 다항시간&lt;br /&gt;
NP : non-Polynomial time&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;span class=&quot;margin&quot;&gt;P 문제란, 다항시간 내에 풀 수 있는 문제&lt;/span&gt;&lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt;그렇다면 NP 문제란, 다항시간 내에 풀 수 없는 문제? X&lt;/span&gt;&lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt;==&amp;gt; 답이 주어 졌을 때 다항 시간 내에 확인 할 수 있는 문제, 역으로 확인만 함&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;margin&quot;&gt;SAT문제는 모든 NP문제 이상으로 어렵다&lt;/span&gt;&lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt;=&amp;gt; SAT문제를 다항 시간에 풀 수 있으면 NP문제는 모두 다항 시간에 풀 수 있다&lt;/span&gt;&lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt;==&amp;gt; 이런 문제들을 NP-Hard(NP-난해) 문제라고 함&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;    &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NP-Hard이며 NP인 문제를 NP-Complete(NP-완비)문제 라고함&lt;/code&gt;&lt;/p&gt;</content><author><name>Sihyeon</name><email>aristohyun97@gmail.com</email></author><category term="알고리즘 문제해결 전략" /><category term="이론" /><summary type="html">컴퓨터 과학에서 계산 이론의 분야로, 계산 문제를 푸는 알고리즘을 복잡도에 따라 분류하여 문제의 모임을 구성하는 방법을 연구한다.</summary></entry><entry><title type="html">C++ list 사용법</title><link href="http://localhost:4000/blog/2020/07/16/List/" rel="alternate" type="text/html" title="C++ list 사용법" /><published>2020-07-16T00:00:00+09:00</published><updated>2020-07-16T00:00:00+09:00</updated><id>http://localhost:4000/blog/2020/07/16/List</id><content type="html" xml:base="http://localhost:4000/blog/2020/07/16/List/">&lt;style&gt;
    .margin {
      font-size:12px;
      margin-left:10px;
    }
    .nomargin{
      font-size:12px;
      margin-left:0;
    }
    .space{
      margin:-10px 0;
    }
  &lt;/style&gt;

&lt;ul class=&quot;toc&quot; id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#heading-생성자&quot; id=&quot;markdown-toc-heading-생성자&quot;&gt;생성자&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#heading-멤버함수&quot; id=&quot;markdown-toc-heading-멤버함수&quot;&gt;멤버함수&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;노드 기반 컨테이너, double linked list&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;heading-생성자&quot;&gt;생성자&lt;/h3&gt;

&lt;p&gt;      &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#include &amp;lt;list&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;list&amp;lt;[Type]&amp;gt;&lt;/code&gt;      &lt;br /&gt;
  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;list&amp;lt;[Type]&amp;gt;::iterator iter&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;heading-멤버함수&quot;&gt;멤버함수&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lt.push_front(k)&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lt.push_back(k)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lt.front()&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lt.back()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lt.pop_front()&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lt.pop_back()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;span class=&quot;space&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lt.insert(iter,k)&lt;/code&gt; &lt;span class=&quot;margin&quot;&gt;삽입된 위치(iter) return&lt;/span&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lt.erase(iter)&lt;/code&gt; &lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt;삭제된 다음 원소 위치 return&lt;/span&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;span class=&quot;space&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lt.remove(k)&lt;/code&gt; &lt;span class=&quot;margin&quot;&gt;k와 같은 값(노드) 모두 삭제&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lt.remove_if(Predicate)&lt;/code&gt;&lt;span class=&quot;margin&quot;&gt;단항조건자에 해당하는 노드 모두 제거&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;predicate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;lt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;remove_if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;predicate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lt.begin()&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lt.end()&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lt.rbegin()&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lt.rend()&lt;/code&gt;
&lt;span class=&quot;margin&quot;&gt;return iter&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;span class=&quot;space&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lt.size()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lt.clear()&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lt.empty()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lt2.swap(lt1)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lt.reverse()&lt;/code&gt; &lt;span class=&quot;margin&quot;&gt;순차열 뒤집기&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;span class=&quot;space&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lt.sort()&lt;/code&gt; &lt;span class=&quot;margin&quot;&gt;오름차순 정렬&lt;/span&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lt2.merge(lt1)&lt;/code&gt; &lt;span class=&quot;margin&quot;&gt;lt2에 lt1을 합병,정렬&lt;/span&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;span class=&quot;space&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lt2.splice(iter,lt1)&lt;/code&gt; 
&lt;span class=&quot;margin&quot;&gt;lt2의 iter에 lt1의 모든 원소를 잘라 붙임&lt;/span&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lt2.splice(iter,lt1,start)&lt;/code&gt;
&lt;span class=&quot;margin&quot;&gt;lt2의 iter에 lt1의 start부터 모두 잘라 붙임&lt;/span&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lt2.splice(iter,lt1,start,end)&lt;/code&gt; 
&lt;span class=&quot;margin&quot;&gt;lt2의 iter에 lt1의 [start,end)를 잘라 붙임&lt;/span&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;span class=&quot;space&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lt.unique()&lt;/code&gt; &lt;span class=&quot;margin&quot;&gt;인접한 원소가 같으면 유일하게 만든다(하나빼고 모두 삭제)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Sihyeon</name><email>aristohyun97@gmail.com</email></author><category term="STL" /><category term="list" /><summary type="html"></summary></entry><entry><title type="html">C++ map 사용법</title><link href="http://localhost:4000/blog/2020/07/15/Map/" rel="alternate" type="text/html" title="C++ map 사용법" /><published>2020-07-15T00:00:00+09:00</published><updated>2020-07-15T00:00:00+09:00</updated><id>http://localhost:4000/blog/2020/07/15/Map</id><content type="html" xml:base="http://localhost:4000/blog/2020/07/15/Map/">&lt;style&gt;
    .margin {
      font-size:12px;
      margin-left:10px;
    }
    .nomargin{
      font-size:12px;
      margin-left:0;
    }
    .space{
      margin:-10px 0;
    }
  &lt;/style&gt;

&lt;ul class=&quot;toc&quot; id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#heading-생성자&quot; id=&quot;markdown-toc-heading-생성자&quot;&gt;생성자&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#heading-멤버함수&quot; id=&quot;markdown-toc-heading-멤버함수&quot;&gt;멤버함수&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#heading-multiset&quot; id=&quot;markdown-toc-heading-multiset&quot;&gt;multiset&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#heading-unordered_map&quot; id=&quot;markdown-toc-heading-unordered_map&quot;&gt;unordered_map&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;&amp;lt; Key - Value &amp;gt;,&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;heading-생성자&quot;&gt;생성자&lt;/h3&gt;

&lt;p&gt;      &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#include &amp;lt;map&amp;gt;&lt;/code&gt;      &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#include &amp;lt;unordered_map&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;map&amp;lt;[Key],[Value]&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;unordered_map&amp;lt;[Key],[Value]&amp;gt;&lt;/code&gt; &lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt;  map은 Key값이 오름차순으로 정렬되어 있음&lt;/span&gt;  &lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt;  unordered_map은 Key값이 정렬되어 있지 않아 더 빠름&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;span class=&quot;space&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;map&amp;lt;int&amp;gt;:: iterator iter&lt;/code&gt;  &lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;iter-&amp;gt;first //key&lt;/code&gt;  &lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;iter-&amp;gt;second //value&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;heading-멤버함수&quot;&gt;멤버함수&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;m[key] = val&lt;/code&gt; &lt;span class=&quot;margin&quot;&gt;으로 데이터 수정, 삽입 가능&lt;/span&gt; &lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt;Key값이 이미 존재하면 수정, 없으면 삽입&lt;/span&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;m.insert(pair&amp;lt;key,val&amp;gt;)&lt;/code&gt;  &lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt;return pair&amp;lt;iter,bool&amp;gt;&lt;/span&gt;&lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt;iter == 삽입위치, bool == 성공/실패, 중복된경우 실패&lt;/span&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;m.erase(k)&lt;/code&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;m.erase(iter)&lt;/code&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;m.erase(start_iter,end_iter)&lt;/code&gt;&lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt;key-value 삭제&lt;/span&gt; 
&lt;span class=&quot;margin&quot;&gt;성공 실패여부 return&lt;/span&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;m.find(k)&lt;/code&gt; &lt;span class=&quot;margin&quot;&gt;k값의 반복자 return,  없을경우 m.end() return&lt;/span&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;span class=&quot;space&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;m.begin()&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;m.end()&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;m.rbegin()&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;m.rend()&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;m.size()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;m.clear()&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;m.empty()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;m2.swap(m1)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;heading-multiset&quot;&gt;multiset&lt;/h3&gt;

&lt;p&gt;      &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#include &amp;lt;map&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;multimap&amp;lt;[Type]&amp;gt;&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;m.insert(k)&lt;/code&gt; &lt;span class=&quot;margin&quot;&gt;return iter&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;m.count(k)&lt;/code&gt;    &lt;span class=&quot;margin&quot;&gt;k값이 몇번 나오는지 return&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;m.lower_bound(k)&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;m.upper_bound(k)&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;m.equal_range(k)&lt;/code&gt;  &lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt;값이 중복이 가능함에 따라 k 값의 시작, 종료지점의 위치 return&lt;/span&gt;  &lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt;equal_range()는 return pair&amp;lt;start_iter,end_iter&amp;gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;heading-unordered_map&quot;&gt;unordered_map&lt;/h3&gt;

&lt;p&gt;      &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#include &amp;lt;unordered_map&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;unordered_map&amp;lt;[Type]&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;span class=&quot;nomargin&quot;&gt;정렬 X&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;&lt;span class=&quot;nomargin&quot;&gt;해시로 동작&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;해시는 특정 타입이 들어오면 나름대로의 타입을 정수로 바꾸는 과정을 취한 후, 그 정수에 대한 값을 기준으로 그 값에 접근을 하게 됩니다&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;m.insert(k)&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;m.erase(k)&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;m.find(k)&lt;/code&gt;  &lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt; 실행시간이 O(1)!&lt;/span&gt;  &lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt; 빠름! 굳이 정렬을 안해도 된다면 unordered를 사용하자 &lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Sihyeon</name><email>aristohyun97@gmail.com</email></author><category term="STL" /><category term="map" /><summary type="html"></summary></entry><entry><title type="html">C++ set 사용법</title><link href="http://localhost:4000/blog/2020/07/15/Set/" rel="alternate" type="text/html" title="C++ set 사용법" /><published>2020-07-15T00:00:00+09:00</published><updated>2020-07-15T00:00:00+09:00</updated><id>http://localhost:4000/blog/2020/07/15/Set</id><content type="html" xml:base="http://localhost:4000/blog/2020/07/15/Set/">&lt;style&gt;
    .margin {
      font-size:12px;
      margin-left:10px;
    }
    .nomargin{
      font-size:12px;
      margin-left:0;
    }
    .space{
      margin:-10px 0;
    }
  &lt;/style&gt;

&lt;ul class=&quot;toc&quot; id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#heading-생성자&quot; id=&quot;markdown-toc-heading-생성자&quot;&gt;생성자&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#heading-멤버함수&quot; id=&quot;markdown-toc-heading-멤버함수&quot;&gt;멤버함수&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#heading-multiset&quot; id=&quot;markdown-toc-heading-multiset&quot;&gt;multiset&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#heading-unordered_set&quot; id=&quot;markdown-toc-heading-unordered_set&quot;&gt;unordered_set&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;노드 기반의 균형 이진트리&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;heading-생성자&quot;&gt;생성자&lt;/h3&gt;

&lt;p&gt;      &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#include &amp;lt;set&amp;gt;&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#include &amp;lt;unordered_set&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;set&amp;lt;[Type]&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;unordered_set&amp;lt;[Type]&amp;gt;&lt;/code&gt;    &lt;br /&gt;
&lt;span class=&quot;nomargin&quot;&gt; set은 키값 중복 X, 자동으로 오름차순 정렬됨&lt;/span&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;set&amp;lt;int&amp;gt;:: iterator iter&lt;/code&gt;  &lt;br /&gt;
  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;*iter //key(value)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;heading-멤버함수&quot;&gt;멤버함수&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;s.insert(k)&lt;/code&gt; &lt;span class=&quot;margin&quot;&gt; k값 삽입, 자동정렬 &lt;/span&gt;  &lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt;return pair&amp;lt;iter,bool&amp;gt;&lt;/span&gt;  &lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt;iter == 삽입위치, bool == 성공,실패&lt;/span&gt;  &lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt;중복된경우 실패&lt;/span&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;s.erase(k)&lt;/code&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;s.erase(iter)&lt;/code&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;s.erase(start_iter,end_iter)&lt;/code&gt; &lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt;key값 삭제&lt;/span&gt;  &lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt;성공 실패여부 return&lt;/span&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;s.find(k)&lt;/code&gt; &lt;span class=&quot;margin&quot;&gt;k값의 반복자 return,  없을경우 s.end() return&lt;/span&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;s.insert(k)&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;s.erase(k)&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;s.find(k)&lt;/code&gt;
&lt;span class=&quot;margin&quot;&gt;실행시간이 O(logn)&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;span class=&quot;space&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;s.begin()&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;s.end()&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;s.rbegin()&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;s.rend()&lt;/code&gt;
&lt;span class=&quot;margin&quot;&gt;return iter&lt;/span&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;s.size()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;s.clear()&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;s.empty()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;s2.swap(s1)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;heading-multiset&quot;&gt;multiset&lt;/h3&gt;

&lt;p&gt;      &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#include &amp;lt;set&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;multiset&amp;lt;[Type]&amp;gt;&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;s.insert(k)&lt;/code&gt; &lt;span class=&quot;margin&quot;&gt;return iter&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;s.count(k)&lt;/code&gt;    &lt;span class=&quot;margin&quot;&gt;k값이 몇번 나오는지 return&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;s.lower_bound(k)&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;s.upper_bound(k)&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;s.equal_range(k)&lt;/code&gt;  &lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt;값이 중복이 가능함에 따라 k 값의 시작, 종료지점의 위치 return&lt;/span&gt;  &lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt;equal_range()는 return pair&amp;lt;start_iter,end_iter&amp;gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;heading-unordered_set&quot;&gt;unordered_set&lt;/h3&gt;

&lt;p&gt;      &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#include &amp;lt;unordered_set&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;unordered_set&amp;lt;[Type]&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;span class=&quot;nomargin&quot;&gt;정렬 X&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;&lt;span class=&quot;nomargin&quot;&gt;해시로 동작&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;해시는 특정 타입이 들어오면 나름대로의 타입을 정수로 바꾸는 과정을 취한 후, 그 정수에 대한 값을 기준으로 그 값에 접근을 함&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;s.insert(k)&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;s.erase(k)&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;s.find(k)&lt;/code&gt;  &lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt; 실행시간이 O(1)!&lt;/span&gt;  &lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt; 빠름! 굳이 정렬을 안해도 된다면 unordered를 사용하자 &lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Sihyeon</name><email>aristohyun97@gmail.com</email></author><category term="STL" /><category term="set" /><summary type="html"></summary></entry><entry><title type="html">C++ stack 사용법</title><link href="http://localhost:4000/blog/2020/07/14/Stack/" rel="alternate" type="text/html" title="C++ stack 사용법" /><published>2020-07-14T00:00:00+09:00</published><updated>2020-07-14T00:00:00+09:00</updated><id>http://localhost:4000/blog/2020/07/14/Stack</id><content type="html" xml:base="http://localhost:4000/blog/2020/07/14/Stack/">&lt;style&gt;
    .margin {
      font-size:12px;
      margin-left:10px;
    }
    .nomargin{
      font-size:12px;
      margin-left:0;
    }
    .space{
      margin:-10px 0;
    }
  &lt;/style&gt;

&lt;ul class=&quot;toc&quot; id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#heading-생성자&quot; id=&quot;markdown-toc-heading-생성자&quot;&gt;생성자&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#heading-멤버함수&quot; id=&quot;markdown-toc-heading-멤버함수&quot;&gt;멤버함수&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;후입 선출 (LIFO , Last In First Out), 선입 후출 (FILO , Fisrt In Last Out)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;heading-생성자&quot;&gt;생성자&lt;/h3&gt;

&lt;p&gt;      &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#include &amp;lt;stack&amp;gt;&lt;/code&gt; &lt;span class=&quot;nomargin&quot;&gt;필요&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;stack&amp;lt;[Data Type]&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;stack&amp;lt;[Data Type],[Container Type]&amp;gt;&lt;/code&gt;  &lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt;내부 컨테이너를 바꿀 수 있음&lt;span&gt;  &lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt;ex) vector, deque, list&lt;span&gt;
&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;heading-멤버함수&quot;&gt;멤버함수&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;stk.push(x)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;stk.pop()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;stk.top()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;stk.empty()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;stk.size()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;span class=&quot;space&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;stk1.swap(stk2)&lt;/code&gt;  &lt;span class=&quot;margin&quot;&gt;stack 두개의 내용물 교환&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;stk.emplace()&lt;/code&gt; &lt;span class=&quot;margin&quot;&gt; 생성자를 호출해 컨테이너 내부에 객체를 바로 생성하고 큐의 끝에 추가한다.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;push()&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;emplae()&lt;/code&gt; &lt;span class=&quot;nomargin&quot;&gt;차이점&lt;/span&gt;  &lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt;push는 값의 복사본을 넣음&lt;/span&gt;  &lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt;emplace는 생성자를 호출해 새로 만들어서 넣음&lt;/span&gt;  &lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt;이렇게 다르다는 뜻&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pair&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stk1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stk2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;stk1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pair&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;stk2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;emplace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Sihyeon</name><email>aristohyun97@gmail.com</email></author><category term="STL" /><category term="stack" /><summary type="html"></summary></entry><entry><title type="html">C++ string 사용법</title><link href="http://localhost:4000/blog/2020/07/14/String/" rel="alternate" type="text/html" title="C++ string 사용법" /><published>2020-07-14T00:00:00+09:00</published><updated>2020-07-14T00:00:00+09:00</updated><id>http://localhost:4000/blog/2020/07/14/String</id><content type="html" xml:base="http://localhost:4000/blog/2020/07/14/String/">&lt;style&gt;
    .margin {
      font-size:12px;
      margin-left:10px;
    }
    .nomargin{
      font-size:12px;
      margin-left:0;
    }
    .space{
      margin:-8px 0;
    }
  &lt;/style&gt;

&lt;ul class=&quot;toc&quot; id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#heading-생성자&quot; id=&quot;markdown-toc-heading-생성자&quot;&gt;생성자&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#heading-멤버함수&quot; id=&quot;markdown-toc-heading-멤버함수&quot;&gt;멤버함수&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;heading-생성자&quot;&gt;생성자&lt;/h3&gt;

&lt;p&gt;      &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#include &amp;lt;string&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;string str(&quot;text&quot;)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;string str; str=&quot;text&quot;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;string str2(str1)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;heading-멤버함수&quot;&gt;멤버함수&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;str.at(index)&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;str[index]&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;str.front()&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;str.back()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;str.push_back(char)&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;str.pop_back()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;swap(str1, str2)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;span class=&quot;space&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;str.size()&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;str.length()&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;str.capacity()&lt;/code&gt;
&lt;span class=&quot;margin&quot;&gt;string은 메모리 할당을 여유있게 하기에 size보다 capacity가 더 크게 잡혀있음&lt;/span&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;str.resize(n)&lt;/code&gt; &lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt;기존 사이즈보다 작으면 남은 스트링은 버림&lt;/span&gt;
&lt;span class=&quot;margin&quot;&gt;크면 빈 스트링은 그냥 남은 공간&lt;/span&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;str.shrink_to_fit()&lt;/code&gt; &lt;span class=&quot;margin&quot;&gt;비어있는 capacity를 없앰. 낭비되는 메모리 제거&lt;/span&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;str.reserve(n)&lt;/code&gt; &lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt;데이터 공간 예약 &lt;/span&gt; &lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt;중간중간 계속 사이즈를 늘리다보면 성능저하가 오기에 미리 할당시키는게 좋음&lt;/span&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;span class=&quot;space&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;str.clear()&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;str.empty()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;str.begin()&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;str.end()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;str.find(string, index)&lt;/code&gt;   &lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt;str에서 string을 찾음&lt;/span&gt;&lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt;일치하는 첫번째 index return&lt;/span&gt;&lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt;index입력 시 해당 index부터 찾음&lt;/span&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;str.substr(index, len)&lt;/code&gt;   &lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt; index부터 len만큼 잘라서 반환&lt;/span&gt;  &lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt; len이 빈칸이면 index부터 끝까지&lt;/span&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;str.c_str()&lt;/code&gt; &lt;span class=&quot;margin&quot;&gt; return char*&lt;/span&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;str.copy(char*, len, index)&lt;/code&gt;&lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt;return len&lt;/span&gt;    &lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt;str의 index부터 len개를 char*에 복사&lt;/span&gt;   &lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt;char*만 넣으면 전체 복사&lt;/span&gt;   &lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt;index를 설정하지 않으면 맨 처음부터 len개&lt;/span&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;str1.replace(index, len, str2)&lt;/code&gt;     &lt;span class=&quot;margin&quot;&gt;str의 index부터 len개를 str2로 대체&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;span class=&quot;space&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;str1.compare(str2)&lt;/code&gt;
&lt;span class=&quot;margin&quot;&gt;앞에서부터 사전순 비교&lt;/span&gt;
&lt;span class=&quot;margin&quot;&gt;같으면 0, 크면 1, 작으면 -1&lt;/span&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;str1.compare(index,len,str2)&lt;/code&gt;
&lt;span class=&quot;margin&quot;&gt;str1의 index부터 len개를 str2와 비교&lt;/span&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;</content><author><name>Sihyeon</name><email>aristohyun97@gmail.com</email></author><category term="STL" /><category term="string" /><summary type="html"></summary></entry><entry><title type="html">C++ vector 사용법</title><link href="http://localhost:4000/blog/2020/07/14/Vector/" rel="alternate" type="text/html" title="C++ vector 사용법" /><published>2020-07-14T00:00:00+09:00</published><updated>2020-07-14T00:00:00+09:00</updated><id>http://localhost:4000/blog/2020/07/14/Vector</id><content type="html" xml:base="http://localhost:4000/blog/2020/07/14/Vector/">&lt;style&gt;
    .margin{
      font-size:12px;
      margin-left:15px;
    }
    .nomargin{
      font-size:12px;
    }
    .space{
      margin:-10px 0;
    }
  &lt;/style&gt;

&lt;ul class=&quot;toc&quot; id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#heading-생성자&quot; id=&quot;markdown-toc-heading-생성자&quot;&gt;생성자&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#heading-멤버-함수&quot; id=&quot;markdown-toc-heading-멤버-함수&quot;&gt;멤버 함수&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;heading-생성자&quot;&gt;생성자&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vector&amp;lt;int&amp;gt; v&lt;/code&gt;   &lt;span class=&quot;margin&quot;&gt;빈 컨테이너 생성&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vector&amp;lt;int&amp;gt; v(n)&lt;/code&gt;  &lt;span class=&quot;margin&quot;&gt;기본값(0)으로 초기화된 n개의 원소를 가진 컨테이너 &lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vector&amp;lt;int&amp;gt; v(n,x)&lt;/code&gt;  &lt;span class=&quot;margin&quot;&gt;x로 초기화된 n개의 원소를 가진 컨테이너 &lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vector&amp;lt;int&amp;gt; v2(v1)&lt;/code&gt;  &lt;span class=&quot;margin&quot;&gt;v1을 복사한 v2  &lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;heading-멤버-함수&quot;&gt;멤버 함수&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v.assign(n,x)&lt;/code&gt; &lt;span class=&quot;margin&quot;&gt;v에 x의 값으로 n개만큼 할당&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v.front()&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v.back()&lt;/code&gt; &lt;span class=&quot;margin&quot;&gt;첫번째, 마지막 원소값 리턴&lt;/span&gt; &lt;br /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v.at(i)&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v[i]&lt;/code&gt; &lt;span class=&quot;margin&quot;&gt;i번 원소 참조&lt;/span&gt;  &lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt;속도 : at(i) &amp;lt; [i]&lt;/span&gt;  &lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt;안정성 : at(i) &amp;gt; [i] &lt;/span&gt;  &lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt;at()은 범위를 점검하기에 느리지만 안전함&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;span class=&quot;space&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v.push_back(x)&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v.pop_back()&lt;/code&gt; &lt;span class=&quot;margin&quot;&gt;원소삽입, 삭제&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v.insert(i,x)&lt;/code&gt; &lt;span class=&quot;margin&quot;&gt;i번째 위치에 x 삽입, 해당 iter 리턴&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v2.swap(v1)&lt;/code&gt; &lt;span class=&quot;margin&quot;&gt;v2와 v1의 원소와 capacity까지 교환&lt;/span&gt;  &lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt;v1의 capacity를 없애고 싶을때도 사용 가능&lt;/span&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v.erase(iter)&lt;/code&gt; &lt;span class=&quot;margin&quot;&gt;iter이 가리키는 원소 제거&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v.erase(start, end)&lt;/code&gt; &lt;span class=&quot;margin&quot;&gt; [start, end) 제거&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;span class=&quot;space&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v.size()&lt;/code&gt;   &lt;span class=&quot;margin&quot;&gt;원소의 갯수(int) 리턴&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v.capacity()&lt;/code&gt; &lt;span class=&quot;margin&quot;&gt;vector의 크기 리턴&lt;/span&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v.clear()&lt;/code&gt;  &lt;span class=&quot;margin&quot;&gt;모든 원소 제거 , 메모리 공간은 그대로&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v.empty()&lt;/code&gt; &lt;span class=&quot;margin&quot;&gt; 비었는지 확인, true == empty&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;span class=&quot;space&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vector&amp;lt;int&amp;gt; ::iterator iter&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v.begin()&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v.end()&lt;/code&gt; &lt;span class=&quot;margin&quot;&gt;첫번째 원소와 마지막다음 원소를 가르킴&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v.rbegin()&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v.rend()&lt;/code&gt;&lt;span class=&quot;margin&quot;&gt; 역순으로 첫번째, 마지막다음 원소를 가르킴 &lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iterator&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v.reserve(n)&lt;/code&gt; &lt;span class=&quot;margin&quot;&gt; n개의 원소를 저장할 공간 예약, capacity 설정 &lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v.resize(n)&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v.resize(n,x)&lt;/code&gt; &lt;span class=&quot;margin&quot;&gt; v의 크기를 n으로 변경, 더 커지는 공간은 기본값 / x로 초기화 &lt;/span&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Sihyeon</name><email>aristohyun97@gmail.com</email></author><category term="STL" /><category term="vector" /><summary type="html"></summary></entry><entry><title type="html">C++ queue 사용법</title><link href="http://localhost:4000/blog/2020/07/14/Queue/" rel="alternate" type="text/html" title="C++ queue 사용법" /><published>2020-07-14T00:00:00+09:00</published><updated>2020-07-14T00:00:00+09:00</updated><id>http://localhost:4000/blog/2020/07/14/Queue</id><content type="html" xml:base="http://localhost:4000/blog/2020/07/14/Queue/">&lt;style&gt;
    .margin {
      font-size:12px;
      margin-left:10px;
    }
    .nomargin{
      font-size:12px;
      margin-left:0;
    }
    .space{
      margin:-10px 0;
    }
  &lt;/style&gt;

&lt;ul class=&quot;toc&quot; id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#heading-생성자&quot; id=&quot;markdown-toc-heading-생성자&quot;&gt;생성자&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#heading-멤버함수&quot; id=&quot;markdown-toc-heading-멤버함수&quot;&gt;멤버함수&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#heading-deque&quot; id=&quot;markdown-toc-heading-deque&quot;&gt;deque&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;선입 선출 (FIFO , First In First Out)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;heading-생성자&quot;&gt;생성자&lt;/h3&gt;

&lt;p&gt;      &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#include &amp;lt;queue&amp;gt;&lt;/code&gt; &lt;span class=&quot;nomargin&quot;&gt;필요&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;queue&amp;lt;[Data Type]&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;queue&amp;lt;[Data Type],[Container Type]&amp;gt;&lt;/code&gt;  &lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt;내부 컨테이너를 바꿀 수 있음&lt;span&gt;  &lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt;ex) vector, deque, list&lt;span&gt;  &lt;br /&gt;
&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;heading-멤버함수&quot;&gt;멤버함수&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;q.push(x)&lt;/code&gt; &lt;span class=&quot;margin&quot;&gt; 가장 뒤에 x 삽입&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;q.pop()&lt;/code&gt; &lt;span class=&quot;margin&quot;&gt;가장 앞에 있는 원소 삭제&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;q.front()&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;q.back()&lt;/code&gt;  &lt;span class=&quot;margin&quot;&gt;맨앞, 맨뒤 원소 참조&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;q.empty()&lt;/code&gt; &lt;span class=&quot;margin&quot;&gt;비었는지 확인, true == empty&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;q.size()&lt;/code&gt;  &lt;span class=&quot;margin&quot;&gt;원소 갯수 리턴, int &lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;span class=&quot;space&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;q1.swap(q2)&lt;/code&gt;  &lt;span class=&quot;margin&quot;&gt;queue 두개의 내용물 교환&lt;/span&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;q.emplace()&lt;/code&gt; &lt;span class=&quot;margin&quot;&gt; 생성자를 호출해 컨테이너 내부에 객체를 바로 생성하고 큐의 끝에 추가한다.&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;push()&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;emplae()&lt;/code&gt; &lt;span class=&quot;nomargin&quot;&gt;차이점&lt;/span&gt;  &lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt;push는 값의 복사본을 넣음&lt;/span&gt;  &lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt;emplace는 생성자를 호출해 새로 만들어서 넣음&lt;/span&gt;  &lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt;이렇게 다르다는 뜻&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pair&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;q1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;q2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;q1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pair&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;q2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;emplace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;heading-deque&quot;&gt;deque&lt;/h3&gt;

&lt;p&gt;      &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#include &amp;lt;deque&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;deque&amp;lt;[Type]&amp;gt;&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dq.at(index)&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dq[index]&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dq.front()&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dq.back()&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dq.push_front(val)&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dq.push_back(val)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dq.pop_front()&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dq.pop_back()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dq.empty()&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dq.clear()&lt;/code&gt;  &lt;br /&gt;
&lt;span class=&quot;space&quot;&gt;&lt;/span&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dq.insert(1,2)&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dq.insert(1,2,3)&lt;/code&gt; 
&lt;span class=&quot;margin&quot;&gt;1번째 위치에 2 삽입&lt;/span&gt;  &lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt;1번째 위치에 2개의 3값을 삽입&lt;/span&gt;  &lt;br /&gt;
&lt;span class=&quot;margin&quot;&gt;삽입시 앞,뒤 원소 개수를 판단해 적은쪽에 공간을 만들어서 삽입&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;span class=&quot;space&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dq.begin()&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dq.end()&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dq.rbegin()&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dq.rend()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Sihyeon</name><email>aristohyun97@gmail.com</email></author><category term="STL" /><category term="queue" /><summary type="html"></summary></entry><entry><title type="html">코드 강조하기</title><link href="http://localhost:4000/blog/2020/07/13/code-highlighting/" rel="alternate" type="text/html" title="코드 강조하기" /><published>2020-07-13T00:00:00+09:00</published><updated>2020-07-13T00:00:00+09:00</updated><id>http://localhost:4000/blog/2020/07/13/code-highlighting</id><content type="html" xml:base="http://localhost:4000/blog/2020/07/13/code-highlighting/">&lt;ul class=&quot;toc&quot; id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#heading-fenced-code-blocks&quot; id=&quot;markdown-toc-heading-fenced-code-blocks&quot;&gt;Fenced Code Blocks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#heading-simple-codeblock&quot; id=&quot;markdown-toc-heading-simple-codeblock&quot;&gt;Simple codeblock&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#heading-highlighted&quot; id=&quot;markdown-toc-heading-highlighted&quot;&gt;Highlighted&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#heading-simple-highlight&quot; id=&quot;markdown-toc-heading-simple-highlight&quot;&gt;Simple Highlight&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#heading-external-gist&quot; id=&quot;markdown-toc-heading-external-gist&quot;&gt;External Gist&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;heading-fenced-code-blocks&quot;&gt;Fenced Code Blocks&lt;/h1&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;~~~~~~~
code with tildes
~~~~~~~~
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;heading-simple-codeblock&quot;&gt;Simple codeblock&lt;/h1&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;function myFunction() {
    alert(&quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&quot;);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;heading-highlighted&quot;&gt;Highlighted&lt;/h1&gt;
&lt;h2 id=&quot;heading-simple-highlight&quot;&gt;Simple Highlight&lt;/h2&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//~~~ c++&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iosteam&amp;gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;hello world&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//~~~&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iosteam&amp;gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;hello world&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;heading-external-gist&quot;&gt;External Gist&lt;/h2&gt;

&lt;script src=&quot;https://gist.github.com/yizeng/9b871ad619e6dcdcc0545cac3101f361.js&quot;&gt;&lt;/script&gt;</content><author><name>Sihyeon</name><email>aristohyun97@gmail.com</email></author><category term="gitblog" /><summary type="html"></summary></entry><entry><title type="html">Kramdown 사용법</title><link href="http://localhost:4000/blog/2020/07/13/quick-kramdown-demo/" rel="alternate" type="text/html" title="Kramdown 사용법" /><published>2020-07-13T00:00:00+09:00</published><updated>2020-07-13T00:00:00+09:00</updated><id>http://localhost:4000/blog/2020/07/13/quick-kramdown-demo</id><content type="html" xml:base="http://localhost:4000/blog/2020/07/13/quick-kramdown-demo/">&lt;blockquote&gt;
  &lt;p&gt;This is &lt;a href=&quot;https://kramdown.gettalong.org/&quot;&gt;kramdown&lt;/a&gt; formatting test page for &lt;a href=&quot;https://github.com/yizeng/jekyll-theme-simple-texture&quot;&gt;Simple Texture&lt;/a&gt; theme.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul class=&quot;toc&quot; id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#heading-일반적으로&quot; id=&quot;markdown-toc-heading-일반적으로&quot;&gt;일반적으로&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#heading-인용문&quot; id=&quot;markdown-toc-heading-인용문&quot;&gt;인용문&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#heading-리스트&quot; id=&quot;markdown-toc-heading-리스트&quot;&gt;리스트&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#heading-테이블&quot; id=&quot;markdown-toc-heading-테이블&quot;&gt;테이블&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#heading-수평선&quot; id=&quot;markdown-toc-heading-수평선&quot;&gt;수평선&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#heading-이미지&quot; id=&quot;markdown-toc-heading-이미지&quot;&gt;이미지&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;참고사이트&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://heropy.blog/2017/09/30/markdown/&quot;&gt;HEROPY Tech&lt;/a&gt;
&lt;a href=&quot;http://gjchoi.github.io/env/Kramdown(%EB%A7%88%ED%81%AC%EB%8B%A4%EC%9A%B4)-%EC%82%AC%EC%9A%A9%EB%B2%95/&quot;&gt;G.J Choi&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;heading-일반적으로&quot;&gt;일반적으로&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://aristohyun.github.io&quot; title=&quot;깃헙 블로그&quot;&gt;링크&lt;/a&gt;는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[이렇게](https://aristohyun.github.io &quot;깃헙 블로그&quot;)&lt;/code&gt; 타이틀도 띄울 수 있음&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;강조는&lt;/strong&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;**이렇게**&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;기울임은&lt;/em&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_이렇게_&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;둘다 섞어서도 됨&lt;/em&gt;&lt;/strong&gt;  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;**_이렇게_**&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;***이거도됨***&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;주석은&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[^1]&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;태그 사용 가능 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;kbd&amp;gt;, &amp;lt;code&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;ins&gt;밑줄&lt;/ins&gt;과 &lt;strike&gt;줄긋기&lt;/strike&gt;는 이걸로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;ins&amp;gt; , &amp;lt;strike&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&quot;heading-인용문&quot;&gt;인용문&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;이게 인용문인데&lt;/p&gt;

  &lt;blockquote&gt;
    &lt;p&gt;이중으로도 사용 가능&lt;/p&gt;
  &lt;/blockquote&gt;

&lt;/blockquote&gt;

&lt;h1 id=&quot;heading-리스트&quot;&gt;리스트&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;* + - &lt;/code&gt; 이걸로 리스트 하는데
    &lt;ul&gt;
      &lt;li&gt;탭하고 적으면 이렇게도
        &lt;ul&gt;
          &lt;li&gt;됨&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;리스트임&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;번호도 가능함&lt;/li&gt;
  &lt;li&gt;번호는 탭한다고 이중으로 안됨&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;heading-테이블&quot;&gt;테이블&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Table 1&lt;/p&gt;

    &lt;table&gt;
      &lt;thead&gt;
        &lt;tr&gt;
          &lt;th&gt;Default aligned&lt;/th&gt;
          &lt;th style=&quot;text-align: left&quot;&gt;Left aligned&lt;/th&gt;
          &lt;th style=&quot;text-align: center&quot;&gt;Center aligned&lt;/th&gt;
          &lt;th style=&quot;text-align: right&quot;&gt;Right aligned&lt;/th&gt;
        &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;First body part&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;Second cell&lt;/td&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;Third cell&lt;/td&gt;
          &lt;td style=&quot;text-align: right&quot;&gt;fourth cell&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;Second line&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;foo&lt;/td&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;strong&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&quot;text-align: right&quot;&gt;baz&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;Third line&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;quux&lt;/td&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;baz&lt;/td&gt;
          &lt;td style=&quot;text-align: right&quot;&gt;bar&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;Footer row&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
          &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
          &lt;td style=&quot;text-align: right&quot;&gt; &lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Table 2&lt;/p&gt;

    &lt;table&gt;
      &lt;thead&gt;
        &lt;tr&gt;
          &lt;th&gt;Default aligned&lt;/th&gt;
          &lt;th style=&quot;text-align: left&quot;&gt;Left aligned&lt;/th&gt;
          &lt;th style=&quot;text-align: center&quot;&gt;Center aligned&lt;/th&gt;
          &lt;th style=&quot;text-align: right&quot;&gt;Right aligned&lt;/th&gt;
        &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;First body part&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;Second cell&lt;/td&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;Third cell&lt;/td&gt;
          &lt;td style=&quot;text-align: right&quot;&gt;fourth cell&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;Second line&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;foo&lt;/td&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;&lt;strong&gt;strong&lt;/strong&gt;&lt;/td&gt;
          &lt;td style=&quot;text-align: right&quot;&gt;baz&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;Third line&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt;quux&lt;/td&gt;
          &lt;td style=&quot;text-align: center&quot;&gt;baz&lt;/td&gt;
          &lt;td style=&quot;text-align: right&quot;&gt;bar&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;td&gt;Footer row&lt;/td&gt;
          &lt;td style=&quot;text-align: left&quot;&gt; &lt;/td&gt;
          &lt;td style=&quot;text-align: center&quot;&gt; &lt;/td&gt;
          &lt;td style=&quot;text-align: right&quot;&gt; &lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;heading-수평선&quot;&gt;수평선&lt;/h1&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;* * * --- ---------- _ _ _&lt;/code&gt;&lt;/p&gt;
&lt;hr /&gt;

&lt;hr /&gt;

&lt;hr /&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;heading-이미지&quot;&gt;이미지&lt;/h1&gt;

&lt;p&gt;&lt;a class=&quot;post-image&quot; href=&quot;https://kramdown.gettalong.org/overview.png&quot;&gt;
&lt;img itemprop=&quot;image&quot; data-src=&quot;https://kramdown.gettalong.org/overview.png&quot; src=&quot;/assets/javascripts/unveil/loader.gif&quot; alt=&quot;Kramdown Overview&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;This is a footnote. &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Sihyeon</name><email>aristohyun97@gmail.com</email></author><category term="gitblog" /><summary type="html">This is kramdown formatting test page for Simple Texture theme.</summary></entry></feed>